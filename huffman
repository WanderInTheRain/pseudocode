"""
class Node:
    def __init__(self, freq, symbol, left=None, right=None):
        self.freq = freq
        self.symbol = symbol
        self.left = left
        self.right = right
"""

def huffmantree(nodes):
    nodes=sorted(nodes,key=lambda x:x.freq)
    
    while len(nodes)>1:
        left=nodes[0]
        right=nodes[1]
        
        father=Node(left.freq+right.freq,'',left,right)
        
        nodes.remove(left)
        nodes.remove(right)
        
        nodes.append(father)
    
    return nodes[0]
    
def printnode(node,val=''):
    if not node.left and not node.right:
        print(f"{node.symbol} -> {val}")
        return
    if node.left:
        printnode(node.left,val+'0')
    if node.right:
        printnode(node.right,val+'1')
